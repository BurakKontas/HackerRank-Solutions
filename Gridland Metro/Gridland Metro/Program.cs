using System.Numerics;

var inputArray = new List<List<int>>()
{
            new(){ 124796080, 312353862, 461507066 },
            new(){ 160401660, 573136419, 813615464 },
            new(){ 248227524, 98600666, 551635782 },
            new(){ 311801218, 137768927, 174809785 },
            new(){ 307286425, 25934740, 629204660 },
            new(){ 45240562, 830604917, 837481748 },
            new(){ 128931561, 808195631, 830601897 },
            new(){ 83291367, 372859222, 450012265 },
            new(){ 239862239, 206618063, 791058498 },
            new(){ 221425748, 190692291, 598502750 },
            new(){ 147261005, 190347307, 743903216 },
            new(){ 324967014, 490019620, 600813014 },
            new(){ 39695341, 792104778, 811760461 },
            new(){ 282060254, 503914182, 660090355 },
            new(){ 390634712, 678529247, 709665785 },
            new(){ 351291657, 692308329, 735329328 },
            new(){ 56102789, 291812575, 440440320 },
            new(){ 401989678, 209030806, 326957031 },
            new(){ 376874447, 36206933, 207161830 },
            new(){ 195015277, 675994118, 808346822 },
            new(){ 198344397, 662857852, 827414267 },
            new(){ 360387054, 458015880, 746834134 },
            new(){ 42977449, 747948200, 801743942 },
            new(){ 272313979, 668636737, 813575091 },
            new(){ 40084124, 224306256, 330243100 },
            new(){ 41963211, 10557596, 539639159 },
            new(){ 254971844, 373396202, 796562335 },
            new(){ 183154927, 576095402, 717493201 },
            new(){ 421783007, 310425306, 344266238 },
            new(){ 268890521, 775672030, 777574785 },
            new(){ 349639665, 833130318, 834575346 },
            new(){ 397159488, 836252941, 837629553 },
            new(){ 123668324, 313535616, 790977453 },
            new(){ 228445426, 756557268, 835364185 },
            new(){ 325411469, 775109361, 810698879 },
            new(){ 339407420, 103081577, 452976749 },
            new(){ 228480120, 484763702, 612466056 },
            new(){ 340553314, 680509250, 723938049 },
            new(){ 325614016, 538115909, 817476690 },
            new(){ 355595085, 12739013, 620438046 },
            new(){ 347507187, 411870727, 814937109 },
            new(){ 251087377, 678003924, 699510883 },
            new(){ 258551792, 69818216, 744658732 },
            new(){ 8952963, 624148742, 759170750 },
            new(){ 301287926, 540884691, 760654809 },
            new(){ 423876214, 390335005, 580288605 },
            new(){ 203650245, 285105326, 572170349 },
            new(){ 268188465, 28565488, 737757940 },
            new(){ 103536771, 804682697, 809828800 },
            new(){ 344939201, 761450465, 794174586 },
            new(){ 118098445, 545387178, 587859075 },
            new(){ 367777762, 102879012, 524309525 },
            new(){ 300643345, 186132412, 190487015 },
            new(){ 72895663, 404847400, 404922678 },
            new(){ 51054751, 616961740, 809028920 },
            new(){ 47715888, 823302586, 826828784 },
            new(){ 411781974, 255873819, 527048301 },
            new(){ 240681318, 553634018, 667581582 },
            new(){ 257570966, 579540549, 673503402 },
            new(){ 311801218, 137768927, 455642671 },
            new(){ 83291367, 372859222, 403555686 },
            new(){ 268890521, 775672030, 825201034 },
            new(){ 195015277, 808346822, 815430679 },
            new(){ 401989678, 209030806, 538689112 },
            new(){ 311801218, 174809785, 518851502 },
            new(){ 300643345, 190487015, 591860110 },
            new(){ 347507187, 814937109, 833621967 },
            new(){ 83291367, 372859222, 703037719 },
            new(){ 311801218, 174809785, 649448800 },
            new(){ 240681318, 667581582, 758075768 },
            new(){ 347507187, 411870727, 453083411 },
            new(){ 40084124, 330243100, 546069753 },
            new(){ 251087377, 678003924, 836144099 },
            new(){ 301287926, 760654809, 821562302 },
            new(){ 8952963, 624148742, 726772112 },
            new(){ 282060254, 503914182, 657775214 },
            new(){ 128931561, 808195631, 808522288 },
            new(){ 40084124, 224306256, 792810897 },
            new(){ 118098445, 587859075, 740281875 },
            new(){ 258551792, 744658732, 763626982 },
            new(){ 300643345, 186132412, 626922267 },
            new(){ 72895663, 404922678, 467117794 },
            new(){ 257570966, 579540549, 610355856 },
            new(){ 367777762, 524309525, 540168624 },
            new(){ 257570966, 673503402, 767179938 },
            new(){ 390634712, 678529247, 718651879 },
            new(){ 344939201, 794174586, 826359828 },
            new(){ 103536771, 809828800, 829092989 },
            new(){ 282060254, 660090355, 717018490 },
            new(){ 45240562, 837481748, 837524705 },
            new(){ 240681318, 667581582, 685173828 },
            new(){ 401989678, 209030806, 736821634 },
            new(){ 367777762, 102879012, 489804886 },
            new(){ 124796080, 312353862, 486047663 },
            new(){ 160401660, 573136419, 803092461 },
            new(){ 183154927, 576095402, 735442237 },
            new(){ 390634712, 678529247, 764098596 },
            new(){ 347507187, 814937109, 831920030 },
            new(){ 228445426, 756557268, 823920786 },
            new(){ 307286425, 629204660, 776537749 },
            new(){ 221425748, 598502750, 709668205 },
            new(){ 42977449, 801743942, 815433655 },
            new(){ 147261005, 743903216, 817553786 },
            new(){ 203650245, 572170349, 711194994 },
            new(){ 40084124, 330243100, 708407497 },
            new(){ 45240562, 837481748, 837698087 },
            new(){ 421783007, 344266238, 835981281 },
            new(){ 45240562, 830604917, 832582992 },
            new(){ 83291367, 450012265, 523374193 },
            new(){ 390634712, 678529247, 721691580 },
            new(){ 118098445, 587859075, 777689497 },
            new(){ 51054751, 809028920, 819695947 },
            new(){ 103536771, 809828800, 814696128 },
            new(){ 195015277, 808346822, 811241085 },
            new(){ 56102789, 291812575, 492641066 },
            new(){ 123668324, 313535616, 386623308 },
            new(){ 258551792, 744658732, 759259156 },
            new(){ 257570966, 673503402, 786474913 },
            new(){ 83291367, 450012265, 457716693 },
            new(){ 248227524, 551635782, 585294942 },
            new(){ 347507187, 814937109, 834227120 },
            new(){ 344939201, 761450465, 826251863 },
            new(){ 344939201, 794174586, 808604075 },
            new(){ 347507187, 411870727, 449646254 },
            new(){ 411781974, 255873819, 688420181 },
            new(){ 349639665, 833130318, 834786371 },
            new(){ 72895663, 404922678, 426619241 },
            new(){ 240681318, 553634018, 598824798 },
            new(){ 344939201, 794174586, 800188189 },
            new(){ 376874447, 36206933, 542254017 },
            new(){ 324967014, 600813014, 815112217 },
            new(){ 123668324, 313535616, 739312922 },
            new(){ 254971844, 796562335, 819132224 },
            new(){ 367777762, 524309525, 663782035 },
            new(){ 45240562, 837481748, 837632067 },
            new(){ 351291657, 692308329, 758038025 },
            new(){ 301287926, 540884691, 616383812 },
            new(){ 45240562, 837481748, 837646772 },
            new(){ 376874447, 207161830, 832254197 },
            new(){ 42977449, 801743942, 815201638 },
            new(){ 228480120, 612466056, 802696593 },
            new(){ 221425748, 190692291, 499272837 },
            new(){ 118098445, 587859075, 689254647 },
            new(){ 254971844, 373396202, 386913109 },
            new(){ 51054751, 616961740, 774130168 },
            new(){ 183154927, 717493201, 816584542 },
            new(){ 56102789, 291812575, 698949045 },
            new(){ 239862239, 206618063, 314966456 },
            new(){ 124796080, 312353862, 367809121 },
            new(){ 397159488, 836252941, 837096124 },
            new(){ 128931561, 808195631, 820088728 },
            new(){ 272313979, 668636737, 742355175 },
            new(){ 325411469, 810698879, 837006919 },
            new(){ 56102789, 291812575, 735987459 },
            new(){ 147261005, 190347307, 485116449 },
            new(){ 423876214, 580288605, 585415528 },
            new(){ 47715888, 826828784, 827200458 },
            new(){ 45240562, 837481748, 837648134 },
            new(){ 221425748, 190692291, 790369050 },
            new(){ 411781974, 527048301, 760860581 },
            new(){ 248227524, 98600666, 447255588 },
            new(){ 240681318, 667581582, 672930661 },
            new(){ 124796080, 312353862, 831723654 },
            new(){ 367777762, 524309525, 625844262 },
            new(){ 123668324, 313535616, 817436675 },
            new(){ 307286425, 25934740, 298188671 },
            new(){ 397159488, 837629553, 837691815 },
            new(){ 300643345, 190487015, 247776557 },
            new(){ 347507187, 411870727, 515950586 },
            new(){ 258551792, 69818216, 734403716 },
            new(){ 45240562, 830604917, 834370569 },
            new(){ 128931561, 808195631, 835682505 },
            new(){ 83291367, 450012265, 617418925 },
            new(){ 72895663, 404847400, 819938027 },
            new(){ 397159488, 836252941, 836913752 },
            new(){ 203650245, 572170349, 835035308 },
            new(){ 128931561, 830601897, 837449832 },
            new(){ 51054751, 809028920, 818516378 }
};

var res = Result.gridlandMetro(424209969, 837724709, 178, inputArray);

var expected = 355371154255826952;

Console.WriteLine($"Actual value: {res}, Expected value: {expected}");
Console.WriteLine($"Is result expected: {res == expected}");

class Result
{

    /*
     * Complete the 'gridlandMetro' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER m
     *  3. INTEGER k
     *  4. 2D_INTEGER_ARRAY track
     */

    public static long gridlandMetro(int n, int m, int k, List<List<int>> track)
    {
        var rowTracks = new Dictionary<int, List<List<int>>> { };
        var numTracks = track.Count;
        if (numTracks == 0) return ((long)n) * m;
        for (var i = 0; i < numTracks; i++)
        {
            var nextTrack = track[i];
            var row = nextTrack[0];
            if (!rowTracks.TryGetValue(nextTrack[0], out _))
            {
                rowTracks[row] = new List<List<int>> { };
            }
            nextTrack.RemoveAt(0);
            rowTracks[row].Add(nextTrack);
        }

        var rowsWithTracks = rowTracks.Keys.ToList();
        rowsWithTracks.Sort();
        var numRowsWithTracks = rowsWithTracks.Count;

        var emptyRows = n - numRowsWithTracks;
        long numFree = (long)emptyRows * m;

        foreach (var row in rowsWithTracks)
        {
            var segs = rowTracks[row];
            var distinctSegs = MakeDistinctIntervals(segs);
            var prevRight = 0;
            foreach (var seg in distinctSegs)
            {
                numFree += seg[0] - prevRight - 1L;
                prevRight = seg[1];
            }
            numFree += (long)m - prevRight;
        }
        return numFree;
    }

    public static List<List<int>> MakeDistinctIntervals(List<List<int>> segs)
    {
        var numSegs = segs.Count;
        if (numSegs == 1) return segs;
        var result = new List<List<int>> { };
        var minLeft = segs.Select(seg => seg[0]).Min();
        var minLeftRight = segs.Where(seg => seg[0] == minLeft).Select(seg => seg[1]).Max();
        var allIntersecting = segs.Where(seg => minLeft <= seg[0] && seg[0] <= minLeftRight + 1);
        var minLeftMaxRight = allIntersecting.Select(segs => segs[1]).Max();

        var leftmostSeg = new List<int> { minLeft, minLeftMaxRight };
        result.Add(leftmostSeg);
        var remaining = segs.Where(seg => seg[0] > minLeftMaxRight).ToList();
        if (remaining.Count > 0)
        {
            var allRightSegs = MakeDistinctIntervals(remaining);
            result.AddRange(allRightSegs);
        }
        return result;
    }
}